// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eRestorante.Services.Database;

#nullable disable

namespace eRestorante.Services.Migrations
{
    [DbContext(typeof(Ib200192Context))]
    partial class Ib200192ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eRestorante.Services.Database.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.CommentDish", b =>
                {
                    b.Property<int>("CommentDishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentDishID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentDishId"));

                    b.Property<DateOnly>("CommentDate")
                        .HasColumnType("date");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.HasKey("CommentDishId")
                        .HasName("PK__CommentD__2FDAB8BD7D59C56C");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DishId");

                    b.ToTable("CommentDish", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.CommentStaff", b =>
                {
                    b.Property<int>("CommentStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommentStaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentStaffId"));

                    b.Property<DateOnly>("CommentDate")
                        .HasColumnType("date");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CommentStaffId")
                        .HasName("PK__CommentS__9A145DB5814E5E59");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentStaff", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateOnly>("CustomerDateRegister")
                        .HasColumnType("date");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CustomerImage")
                        .HasColumnType("image");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("CustomerStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B810B8D511");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DishId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<decimal>("DishCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DishDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DishImage")
                        .HasColumnType("image");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DishId")
                        .HasName("PK__Dishes__18834F7047BD2687");

                    b.HasIndex("CategoryId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DrinkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<decimal?>("DrinkAlcoholPerc")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("DrinkCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DrinkDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("DrinkImage")
                        .HasColumnType("image");

                    b.Property<string>("DrinkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrinkId")
                        .HasName("PK__Drinks__C094D3C8012B46A1");

                    b.HasIndex("CategoryId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Order", b =>
                {
                    b.Property<int>("OrdersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrdersID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdersId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<byte?>("OrderNullified")
                        .HasColumnType("tinyint");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("OrderStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("OrdersId")
                        .HasName("PK__Orders__630B9956504462F5");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eRestorante.Services.Database.OrderDish", b =>
                {
                    b.Property<int>("OrderDishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDishID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDishId"));

                    b.Property<int?>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDishId")
                        .HasName("PK__OrderDis__7F00FA2003A4B710");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDish", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.OrderDrink", b =>
                {
                    b.Property<int>("OrderDrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDrinkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDrinkId"));

                    b.Property<int?>("DrinkId")
                        .HasColumnType("int")
                        .HasColumnName("DrinkID");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("OrderQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderDrinkId")
                        .HasName("PK__OrderDri__DA4E39D7C654E395");

                    b.HasIndex("DrinkId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDrink", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.RatingDish", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.Property<DateOnly>("RatingDate")
                        .HasColumnType("date");

                    b.Property<int>("RatingNumber")
                        .HasColumnType("int");

                    b.HasKey("RatingId")
                        .HasName("PK__RatingDi__FCCDF85CB77426E4");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DishId");

                    b.ToTable("RatingDish", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.RatingStaff", b =>
                {
                    b.Property<int>("RatingStaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatingStaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingStaffId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateOnly>("RatingDate")
                        .HasColumnType("date");

                    b.Property<int>("RatingNumber")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("RatingStaffId")
                        .HasName("PK__RatingSt__EDBBA03936960BC7");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingStaff", (string)null);
                });

            modelBuilder.Entity("eRestorante.Services.Database.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReservationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfHours")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfMinors")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReservationDate")
                        .HasColumnType("date");

                    b.Property<string>("ReservationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("ReservationTime")
                        .HasColumnType("time");

                    b.Property<string>("SpecialWishes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F04ADF6B8A2");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Role", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolesId"));

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolesId")
                        .HasName("PK__Roles__C4B2782012A27FF4");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("eRestorante.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("UserImage")
                        .HasColumnType("image");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("UserStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC809260E0");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eRestorante.Services.Database.UserRole", b =>
                {
                    b.Property<int>("UserRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRolesID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRolesId"));

                    b.Property<DateOnly>("DateChange")
                        .HasColumnType("date");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserRolesId")
                        .HasName("PK__UserRole__43D8C0CD687CEE77");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("eRestorante.Services.Database.CommentDish", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("CommentDishes")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customer_CommentDish");

                    b.HasOne("eRestorante.Services.Database.Dish", "Dish")
                        .WithMany("CommentDishes")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK_IB200192_Dishes_Comment");

                    b.Navigation("Customer");

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("eRestorante.Services.Database.CommentStaff", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("CommentStaffs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customer_CommentStaff");

                    b.HasOne("eRestorante.Services.Database.User", "User")
                        .WithMany("CommentStaffs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_IB200192_User_Comment");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Dish", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Category", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_IB200192_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Drink", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Category", "Category")
                        .WithMany("Drinks")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_IB200192_Category_Drink");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Order", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customers");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("eRestorante.Services.Database.OrderDish", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Dish", "Dish")
                        .WithMany("OrderDishes")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK_IB200192_Dishes");

                    b.HasOne("eRestorante.Services.Database.Order", "Order")
                        .WithMany("OrderDishes")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_IB200192_Orders");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("eRestorante.Services.Database.OrderDrink", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Drink", "Drink")
                        .WithMany("OrderDrinks")
                        .HasForeignKey("DrinkId")
                        .HasConstraintName("FK_IB200192_Drink");

                    b.HasOne("eRestorante.Services.Database.Order", "Order")
                        .WithMany("OrderDrinks")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_IB200192_Order_Drink");

                    b.Navigation("Drink");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("eRestorante.Services.Database.RatingDish", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("RatingDishes")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customer_Ratings");

                    b.HasOne("eRestorante.Services.Database.Dish", "Dish")
                        .WithMany("RatingDishes")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK_IB200192_Dishes_Ratings");

                    b.Navigation("Customer");

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("eRestorante.Services.Database.RatingStaff", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("RatingStaffs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customer_RatingStaff");

                    b.HasOne("eRestorante.Services.Database.User", "User")
                        .WithMany("RatingStaffs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_IB200192_User_Ratings");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Reservation", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_IB200192_Customer_Reservation");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("eRestorante.Services.Database.UserRole", b =>
                {
                    b.HasOne("eRestorante.Services.Database.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_IB200192_Roles");

                    b.HasOne("eRestorante.Services.Database.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_IB200192_Users");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Category", b =>
                {
                    b.Navigation("Dishes");

                    b.Navigation("Drinks");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Customer", b =>
                {
                    b.Navigation("CommentDishes");

                    b.Navigation("CommentStaffs");

                    b.Navigation("Orders");

                    b.Navigation("RatingDishes");

                    b.Navigation("RatingStaffs");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Dish", b =>
                {
                    b.Navigation("CommentDishes");

                    b.Navigation("OrderDishes");

                    b.Navigation("RatingDishes");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Drink", b =>
                {
                    b.Navigation("OrderDrinks");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Order", b =>
                {
                    b.Navigation("OrderDishes");

                    b.Navigation("OrderDrinks");
                });

            modelBuilder.Entity("eRestorante.Services.Database.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("eRestorante.Services.Database.User", b =>
                {
                    b.Navigation("CommentStaffs");

                    b.Navigation("RatingStaffs");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
